{"ast":null,"code":"var _jsxFileName = \"/Users/harshitbisht/Desktop/React/React Basic/react-basic/src/Components/Basics/UseReducerHooks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  if (action.type === \"INCR\") {}\n};\nconst UseReducerHooks = () => {\n  _s();\n  // const[count,setcount] = useState(0)\n  // useEffect(()=>{\n  //     document.title = `chats(${count})`\n  // },[])\n  const initalData = 10;\n  const [state, dispatch] = useReducer(reducer, initalData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"UseReducerHooks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"INCR\"\n      }),\n      children: \" decrease Count \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {},\n      children: \" Increase Count \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(UseReducerHooks, \"+AcyIOka2rmG3JDSBCjax2sGdmw=\");\n_c = UseReducerHooks;\nexport default UseReducerHooks;\nvar _c;\n$RefreshReg$(_c, \"UseReducerHooks\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","reducer","state","action","type","UseReducerHooks","initalData","dispatch"],"sources":["/Users/harshitbisht/Desktop/React/React Basic/react-basic/src/Components/Basics/UseReducerHooks.js"],"sourcesContent":["import React, { useState,useEffect,useReducer } from 'react'\n\n\nconst reducer = ((state,action)=> {\n    if(action.type===\"INCR\"){\n        \n    }\n\n})\nconst UseReducerHooks = () => {\n\n    // const[count,setcount] = useState(0)\n    // useEffect(()=>{\n    //     document.title = `chats(${count})`\n    // },[])\n    const initalData =10\n    \n    \n    const[state, dispatch] = useReducer(reducer,initalData);\n  return (\n\n    <>\n    {/* <h1>UseStaeHooks</h1>\n    <h1>{count}</h1>\n    <button onClick={()=>{setcount(count+1)}}> Increase Count </button>\n    <button onClick={()=>{setcount(count-1)}}> decrease Count </button>\n    <h1>UseEffectHooks</h1>\n    <h1>{count}</h1>\n    <button onClick={()=>{setcount(count-1)}}> decrease Count </button>\n    <button onClick={()=>{setcount(count+1)}}> Increase Count </button> */}\n\n    <h1>UseReducerHooks</h1>\n    <h1>{state}</h1>\n\n    <button onClick={()=> dispatch({type:\"INCR\"})}> decrease Count </button>\n    <button onClick={()=>{}}> Increase Count </button>\n\n    </>\n  )\n}\n\nexport default UseReducerHooks\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,EAACC,UAAU,QAAQ,OAAO;AAAA;AAAA;AAG5D,MAAMC,OAAO,GAAI,CAACC,KAAK,EAACC,MAAM,KAAI;EAC9B,IAAGA,MAAM,CAACC,IAAI,KAAG,MAAM,EAAC,CAExB;AAEJ,CAAE;AACF,MAAMC,eAAe,GAAG,MAAM;EAAA;EAE1B;EACA;EACA;EACA;EACA,MAAMC,UAAU,GAAE,EAAE;EAGpB,MAAK,CAACJ,KAAK,EAAEK,QAAQ,CAAC,GAAGP,UAAU,CAACC,OAAO,EAACK,UAAU,CAAC;EACzD,oBAEE;IAAA,wBAUA;MAAA,UAAI;IAAe;MAAA;MAAA;MAAA;IAAA,QAAK,eACxB;MAAA,UAAKJ;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAEhB;MAAQ,OAAO,EAAE,MAAKK,QAAQ,CAAC;QAACH,IAAI,EAAC;MAAM,CAAC,CAAE;MAAA,UAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAS,eACxE;MAAQ,OAAO,EAAE,MAAI,CAAC,CAAE;MAAA,UAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBAE/C;AAEP,CAAC;AAAA,GA9BKC,eAAe;AAAA,KAAfA,eAAe;AAgCrB,eAAeA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}